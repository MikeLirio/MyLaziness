# use this file to run your own startup commands for msys2 bash'

# To add a new vendor to the path, do something like:
# export PATH=${CMDER_ROOT}/vendor/whatever:${PATH}

# Uncomment this to have the ssh agent load with the first bash terminal
# . "${CMDER_ROOT}/vendor/lib/start-ssh-agent.sh"

###############################################################################################
## README #####################################################################################
###############################################################################################
#
# This file is code to be used on Cmder app.
# To use this file just replace the file user_profile.sh that you can find on 
# ${CMDER_FOLDER}/config folder.
#
# To change to exporting it to bash_profile you will have to change a few thing:
#   - Depending of the software you are using it could fail with some commands. 
#       open, .bat files, tail or sudo
#   - instead of execute .bat file you will have to change it to sh files. 
#   - make sure the path is right. Depending of the software you will have to write /drives/c/ or /c/ or even //c/
#   - you will have to make some research to make it work: 
#   https://stackoverflow.com/questions/35931378/local-bashrc-is-not-read-on-startup-under-mobaxterm-home-on-windows
#
# if [ -f ~/.bashrc ]; then
# 	. ~/.bashrc
# fi
#
###############################################################################################
## CHANGE LOG #################################################################################
###############################################################################################
# Change Log v1.6
#      - Added variables for Docker management. 
#      - Added management of AWS-CLI with Docker.
#      - Upgrade on function. Create printLirioEnv and printLirioAlias
#
# Change Log v1.5
#       - Refactoring and fix some variables.
#       - Added new function goDev and importProfile from MyLazyness GitHub Repo.
#       - Added alias like ls.
#
# Change Log v1.4 
#       - Adaptation to Debian and Linux distributions. WIP.
# 
# Change Log v1.3
#       - Added liferayDatabaseON to start the Docker container of mysql related 
#         McDonald Project.
#       - Added DEV_LIFERAY_DATABASE variable used on previous function.
#       - Some functions are being commented because I do not trust they still works after the
#         environment variables changes.
#
# Change Log v1.2
#       - Added funcion debugOn and debugOff on lirio.
#       - Liferay functions are pending to be fixed.
#       - Lirio functions version 1.1
#
# Change Log v1.1
#	- Added openLiferayEnv to executes openLiferayDev - openLiferayDeploy - openLiferayOsgi
#	  functions.
#	- Updated mc_everis functions to v1.s to v1.2.
#
# Change Log v1.0
#       - Added goDocker function.
#       - Added saveCmder & loadCmder function to manage this file easyly.
#       - Added behavior on editProfile function. Now it will execute reloadProfile function
#         when it ends the edition.
#       - Updated lirio function.
#
###############################################################################################
## ENVIRONMENT VARIABLE - LIRIO ###############################################################
###############################################################################################

export JAVA_HOME="/mnt/c/Program Files/Java/jdk1.8.0_271"
export JRE_HOME="/mnt/c/Program Files/Java/jdk1.8.0_271/jre"

export LINUX_HOME="/home/lirio"
export DEV_PATH="/mnt/j/Desarrollo"

export GITHUB_PATH="${DEV_PATH}/github"
export MY_LAZINESS="${GITHUB_PATH}/MyLaziness"

export BASH_PROFILE="${LINUX_HOME}/.bash_profile"
export BASH_PROFILE_VERSION=1.6

# Variables use on Docker configuration
export AWS_DOCKER="${MY_LAZINESS}/docker/aws-cli"
export AWS_DOCKER_CONFIG="${AWS_DOCKER}/.aws"
export AWS_DOCKER_HELPER="${MY_LAZINESS}/helper"

###############################################################################################
## ENVIRONMENT VARIABLE - EVERIS ##############################################################
###############################################################################################

export DEV_LIFERAY=${DEV_PATH}/everis-liferay/mcdonalds
export DEV_LIFERAY_DATABASE=${DEV_LIFERAY}/database
export LIFERAY_MCDONALD=${DEV_LIFERAY}/ourloungecloud/liferay/bundles/osgi/modules
export LIFERAY_PATH=${DEV_PATH}/everis-liferay/liferay_7.2.SP2
export LIFERAY_TOMCAT_PATH=${LIFERAY_PATH}/tomcat-9.0.33

###############################################################################################
## ALIAS ######################################################################################
###############################################################################################

alias ls="ls -la"
alias ojete="echo \"calor!\""

###############################################################################################
## FUNCTIONS ##################################################################################
###############################################################################################

function lirio () {
    echo "Lirio Documentation v${BASH_PROFILE_VERSION}. Functions defined on ${BASH_PROFILE}"
    echo -e "\n############# List of Functions"
    echo " lirio               -   List of functions in .bash_profile."
    echo " everis              -   List all everis functions"
    echo " mc_everis           -   List of functions related with McDonald's project and Liferay 7.2 in local."
    echo -e "\n############# Lirio Functions"
    echo " printLirioEnv       -   Like printenv but with the variables of this file."
    echo " printLirioAlias     -   Print all the alias declared on this file."
    echo " editProfile         -   Edit the bash_profile."
    echo " importProfile       -   Import and load the ${MY_LAZINESS}/Consoles/.bash_profile_linux file."
    echo " reloadProfile       -   Reload the profile avoiding to restart the terminal."
    echo " goDocker            -   cd ${DEV_PATH}/docker"
    echo " goDev               -   cd ${DEV_PATH}"
    echo " saveCmder           -   store the user_profile.sh of Cmder on MyLazyness repository."
    echo " loadCmder           -   load from MyLazyness repository the user_profile.sh of Cmder."
    echo " debugOn pattern     -   set Environment Variable {DEBUG} in '*'. Pattern is a variable that you can concatenate with *"
    echo " debugOff            -   set Environment Variable {DEBUG} with value ''"
    echo -e "\n############# Aliases"
    printLirioAlias
    echo -e ""
}

function debugOn() {
    echo "Activating DEBUG"
    if [ -z "$1" ]; then
       export DEBUG=*
       printenv DEBUG
    else
       local service=$1
       export DEBUG="$service*"
       printenv DEBUG
    fi
}

function debugOff() {
   echo "Deactivating DEBUG"
   unset DEBUG
}

function editProfile () {
    sudo vi ${BASH_PROFILE}
    echo "Reloading the user_profile.sh file."
    reloadProfile
}

function reloadProfile () {
    source ${BASH_PROFILE}
}

function importProfile {
    cp ${MY_LAZINESS}/Consoles/.bash_profile_linux ${LINUX_HOME}/.bash_profile
    reloadProfile
}

function printLirioEnv () {
    echo "## ENVIRONMENT VARIABLE - LIRIO"
    echo "JAVA_HOME : ${JAVA_HOME}"
    echo "JRE_HOME : ${JRE_HOME}"
    echo "BASH_PROFILE : ${BASH_PROFILE}"
    echo "BASH_PROFILE_VERSION : ${BASH_PROFILE_VERSION}"
    echo "GITHUB_PATH : ${GITHUB_PATH}"
    echo "MY_LAZINESS : ${MY_LAZINESS}"
    echo "DEV_PATH : ${DEV_PATH}"
    echo "AWS_DOCKER : ${AWS_DOCKER}"
    echo "AWS_DOCKER_CONFIG : ${AWS_DOCKER_CONFIG}"
    echo "AWS_DOCKER_HELPER : ${AWS_DOCKER_HELPER}"
    echo "LINUX_HOME : ${LINUX_HOME}"
    echo -e "## ENVIRONMENT VARIABLE - EVERIS"
    echo "DEV_LIFERAY : ${DEV_LIFERAY}"
    echo "DEV_LIFERAY_DATABASE : ${DEV_LIFERAY_DATABASE}"
    echo "LIFERAY_MCDONALD : ${LIFERAY_MCDONALD}"
    echo "LIFERAY_PATH : ${LIFERAY_PATH}"
    echo "LIFERAY_TOMCAT_PATH : ${LIFERAY_TOMCAT_PATH}"
}

function printLirioAlias () {
    echo "alias ls => ls -la"
    echo "alias ojete => echo calor! "
    echo "alias aws => docker run --rm -ti -v ${AWS_DOCKER_CONFIG}:/root/.aws -v ${AWS_DOCKER_HELPER}:/aws amazon/aws-cli "
}

function goDocker () {
    cd ${DEV_PATH}/docker
}

function goDev () {
    cd ${DEV_PATH}
}

function saveCmder () {
    echo "Fetch and Pull of MyLazyness Repository."
    git --work-tree=${MY_LAZINESS} fetch
    git --work-tree=${MY_LAZINESS} pull
    echo "Copying file user_profile.sh to repository."
    cp ${DEV_PATH}/Software-Tools/cmder/config/user_profile.sh ${MY_LAZINESS}/Consoles/cmder_user_profile.sh
    echo "Generating commit and pushing it."
    git --work-tree=${MY_LAZINESS} add ${MY_LAZINESS}/Consoles/cmder_user_profile.sh 
    git --work-tree=${MY_LAZINESS} commit -m "Autogenerated: new user_profile of Cmder. See changelogs."
    git --work-tree=${MY_LAZINESS} push
    echo "saveCmder ended !!"
}

function loadCmder () {
    echo "Fetch and Pull of MyLazyness Repository."
    git --work-tree=${MY_LAZINESS} fetch
    git --work-tree=${MY_LAZINESS} pull
    echo "Copying user_profile.sh to Cmder file."
    cp ${DEV_PATH}/Consoles/cmder_user_profile.sh ${DEV_PATH}/Software-Tools/cmder/config/user_profile.sh
    echo "File copied."
    reloadProfile
    echo "File loaded !!"
}

###############################################################################################
################## Everis functions for Liferay McDonald ######################################
###############################################################################################

function everis () {
    echo "############# everis Functions"
    mc_everis
}

function mc_everis () {
    echo "############# mc_everis Functions"
    echo "############# Bugs and improvements"
    echo "# Need of removing all paths from description and use variables"
    echo "# Liferay paths are being changed. Need to be updated to work properly"
    echo "#############"
    echo "liferayOn          -   start Liferay 7.2"
    echo "liferayOff         -   stop  Liferay 7.2"
    echo "liferayDatabaseOn  -   start the Docker container with mysql and the schema used in Local"
    echo "liferayDeploy      -   Mv the content of /CREWPORTAL/bundles/osgi/modules to liferay/deploy folder"
    echo "liferayClean       -   clean the content of liferay app."
    echo "liferayCleanOn     -   executes liferayClean and after liferayOn"
    echo "liferayCleanDev    -   clean the .jar on ${LIFERAY_PATH}/osgi/modules folder."
    echo "liferayCleanOsgi   -   clean the .jar on ${DEV_LIFERAY}/crewportal/CREWPORTAL/bundles/osgi/modules folder."
    echo "liferayLogs        -   show last logs of liferay: ${LIFERAY_PATH}/logs/liferay.*.log"
    echo "catalinaLogs       -   show logs of catalina: ${LIFERAY_TOMCAT_PATH}/logs/catalina.out"
    echo "########################## Using 'cd' to some Path"
    echo "goLiferay          -   cd ${LIFERAY_PATH}"
    echo "goLiferayDev       -   cd ${DEV_LIFERAY}/bundles/osgi/modules"
    echo "goLiferayDeploy    -   cd ${LIFERAY_PATH}/deploy"
    echo "goLiferayOsgi      -   cd ${LIFERAY_PATH}/osgi/modules"
    echo "goTomcat           -   cd ${LIFERAY_TOMCAT_PATH}"
    echo "########################## Open explorer on Windows"
    echo "openLiferay        -   open folder ${LIFERAY_PATH} on explorer"
    echo "openLiferayDev     -   open folder ${DEV_LIFERAY}/bundles/osgi/modules on explorer"
    echo "openLiferayDeploy  -   open folder ${LIFERAY_PATH}/deploy on explorer"
    echo "openLiferayOsgi    -   open folder ${LIFERAY_PATH}/osgi/modules on explorer"
    echo "openTomcat         -   open folder ${LIFERAY_TOMCAT_PATH} on explorer"
    echo "openLiferayEnv     -   executes openLiferayDev - openLiferayDeploy - openLiferayOsgi functions."
}

function liferayDatabaseOn () {
    cd ${DEV_LIFERAY_DATABASE}
    docker-compose up
}

function goLiferay () {
    cd ${LIFERAY_PATH}
    pwd
}

function goLiferayDev () {
    cd ${LIFERAY_MCDONALD}
    pwd
}

function goLiferayDeploy () {
    cd ${LIFERAY_PATH}/deploy
    pwd
}

function goLiferayOsgi () {
   cd ${LIFERAY_PATH}/osgi/modules
   pwd
}

function goTomcat () {
    cd ${LIFERAY_TOMCAT_PATH}
    pwd
}

function openLiferay () {
    start ${LIFERAY_PATH}
}

function openLiferayDev () {
    start ${LIFERAY_MCDONALD}
}

function openTomcat () {
    start ${LIFERAY_TOMCAT_PATH}
}

function openLiferayDeploy () {
    start ${LIFERAY_PATH}/deploy
}

function openLiferayOsgi () {
    start ${LIFERAY_PATH}/osgi/modules
}

function openLiferayEnv () {
    openLiferayDev
    openLiferayDeploy
    openLiferayOsgi
}

function liferayCleanOsgi () {
    echo "This has to be rechecked"
    # echo "Removing elements from ${LIFERAY_PATH}/osgi/modules/*.jar"
    # rm ${LIFERAY_PATH}/osgi/modules/*.jar
}

function liferayCleanDev () {
    echo "This has to be rechecked"
    # echo "Removing elements from ${DEV_LIFERAY}/bundles/osgi/modules/*.jar"
    # rm ${DEV_LIFERAY}/bundles/osgi/modules/*.jar
}


function liferayDeploy () {
    echo "This has to be rechecked"
    # echo "Moving elements from ${DEV_LIFERAY}/osgi/modules to ${LIFERAY_PATH}/deploy"
    # echo "ls ${DEV_LIFERAY}/bundles/osgi/modules"
    # ls ${DEV_PATH}/bundles/osgi/modules
    # cp ${DEV_PATH}/bundles/osgi/modules/* ${LIFERAY_PATH}/deploy
}

function liferayOn () {
    echo "Turning ON ${LIFERAY_TOMCAT_PATH}/bin/startup.sh"
    # sh ${LIFERAY_TOMCAT_PATH}/bin/startup.sh
    goTomcat
    ./bin/startup.bat
}

function liferayCleanOn () {
    liferayClean
    liferayOn
}

function liferayOff () {
    echo "Turning OFF ${LIFERAY_TOMCAT_PATH}/bin/shutdown.sh"
    # sh ${LIFERAY_TOMCAT_PATH}/bin/shutdown.sh
    goTomcat
    ./bin/shutdown.bat
}

function liferayClean () {
    echo "Removing ${LIFERAY_PATH}/osgi/state/*"
    rm -r ${LIFERAY_PATH}/osgi/state/*
    # echo "Removing ${LIFERAY_PATH}/work/*"
    # rm -r work/*

    # echo "Removing ${LIFERAY_TOMCAT_PATH}/temp/*"
    # rm -r ${LIFERAY_TOMCAT_PATH}/temp/*
    # echo "Removing ${LIFERAY_TOMCAT_PATH}/work/Catalina/*"
    # rm -r ${LIFERAY_TOMCAT_PATH}/work/Catalina/*

    # Server mode
    # sh /opt/liferay/tomcat-7.0.62/bin/everis.clean.liferay.sh
}

function liferayLogs () {
    now=`date +"%Y-%m-%d"`
    tail -2000f ${LIFERAY_PATH}/logs/liferay.${now}.log
}

function catalinaLogs () {
    tail -2000f ${LIFERAY_TOMCAT_PATH}/logs/catalina.out
}

###############################################################################################